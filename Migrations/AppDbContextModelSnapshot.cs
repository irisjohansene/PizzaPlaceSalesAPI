// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaPlaceSalesAPI.Data;

#nullable disable

namespace PizzaPlaceSalesAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Order", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Order_Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Order_Detail", b =>
                {
                    b.Property<int>("Order_Detail_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Detail_Id"), 1L, 1);

                    b.Property<int>("Order_Id")
                        .HasColumnType("int");

                    b.Property<string>("Pizza_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Order_Detail_Id");

                    b.HasIndex("Order_Id");

                    b.HasIndex("Pizza_Id");

                    b.ToTable("Order_Details");
                });

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Pizza", b =>
                {
                    b.Property<string>("Pizza_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Pizza_Type_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(2,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pizza_Id");

                    b.HasIndex("Pizza_Type_Id");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Pizza_Type", b =>
                {
                    b.Property<string>("Pizza_Type_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pizza_Type_Id");

                    b.ToTable("Pizza_Types");
                });

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Order_Detail", b =>
                {
                    b.HasOne("PizzaPlaceSalesAPI.Models.Order", "Order")
                        .WithMany("Order_Details")
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaPlaceSalesAPI.Models.Pizza", "Pizza")
                        .WithMany("Order_Details")
                        .HasForeignKey("Pizza_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Pizza", b =>
                {
                    b.HasOne("PizzaPlaceSalesAPI.Models.Pizza_Type", "Pizza_Type")
                        .WithMany("Pizzas")
                        .HasForeignKey("Pizza_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza_Type");
                });

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Order", b =>
                {
                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Pizza", b =>
                {
                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("PizzaPlaceSalesAPI.Models.Pizza_Type", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
